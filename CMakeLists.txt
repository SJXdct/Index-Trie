#set( SRC_LIST  capture/*.cpp hash_bucket.cpp hash_table.cpp main.cpp) 
#set( SRC_LIST  main.cpp) 
SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -O0 -Wall -g -ggdb")
SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3 -Wall -g")

aux_source_directory(. SOURCE)
aux_source_directory(capture CAPTURE_SOURCE)
aux_source_directory(storage STORAGE_SOURCE)
aux_source_directory(query QUERY_SOURCE)
include_directories(../netflowCollector)
#aux_source_directory(util UTIL_SOURCE)
set( UTIL_SOURCE util/bitmap.cpp util/string_hash.cpp util/trie_node.cpp)
#set( SRC_LIST ${SOURCE} ${CAPTURE_SOURCE} ${STORAGE_SOURCE}) 
set( SRC_LIST ${SOURCE} ${CAPTURE_SOURCE} ${STORAGE_SOURCE} ${UTIL_SOURCE} ${QUERY_SOURCE})
set( PROJECT_BINARY_DIR ../ ) 
set( EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
add_definitions("-std=gnu++0x")
#add_definitions("-std=g++")
add_executable( traceDB ${SRC_LIST})
target_link_libraries(traceDB pthread pcap mysqlclient log4cpp yaml-cpp libnetflowCollector)
